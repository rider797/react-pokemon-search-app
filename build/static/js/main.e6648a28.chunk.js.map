{"version":3,"sources":["components/Title.js","components/Search.js","components/Footer.js","components/Deck.js","components/PokemonInfo.js","components/Results.js","index.js","utils/storage.js"],"names":["Title","props","react_default","a","createElement","Fragment","title","subtitle","Search","onChange","event","filterName","value","target","toLowerCase","filteredPokemons","pokemons","filter","pokemon","lowerCasePokemonName","name","lowerCaseFilterName","includes","map","sort","firstName","secondName","lowerCaseFirstName","lowerCaseSecondName","startsWith","localeCompare","onPokemonsChange","placeholder","Footer","Deck","_ref","deckItems","deckItem","index","key","className","PokemonInfo","_React$useState","React","useState","_React$useState2","Object","slicedToArray","imageSrc","setImageSrc","_React$useState3","_React$useState4","desc","setDesc","_React$useState5","_React$useState6","weight","setWeight","_fetchPokemon","asyncToGenerator","regenerator_default","mark","_callee","response","species","flavorTextEntry","wrap","_context","prev","next","fetch","concat","sent","json","sprites","front_default","setTimeout","back_default","url","flavor_text_entries","find","element","language","flavor_text","stop","apply","this","arguments","useEffect","fetchPokemon","src","alt","propType","PropTypes","string","isRequired","Results","showPokemon","setShowPokemon","components_PokemonInfo","onClick","onAddToDeckClick","handleClick","length","App","setPokemons","localStorage","getItem","JSON","parse","error","getDeckFromStorage","deck","setDeck","setItem","stringify","setDeckToStorage","components_Title","components_Deck","components_Search","newPokemons","components_Results","pokeName","sliceDeck","toConsumableArray","slice","components_Footer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e6648a28.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Title(props) {\n  return (\n    <>\n      <h1>{props.title}</h1>\n      <h2>{props.subtitle}</h2>\n    </>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string\n};\n//propTypes is a support for developers to see if you forgot to set an element\n\nexport default Title;\n","import React from \"react\";\nimport pokemons from \"json-pokemon\";\nimport PropTypes from \"prop-types\";\n\nfunction filterPokemonsByName(filterName) {\n  return pokemon => {\n    const lowerCasePokemonName = pokemon.name.toLowerCase();\n    const lowerCaseFilterName = filterName.toLowerCase();\n    return lowerCasePokemonName.includes(lowerCaseFilterName);\n  };\n}\n//this function is used below under .filter\n// startsWith could also be replaced with .includes() to have all pokemons where ex. pi is includes. Otherwise it is only the pokemons that starts with pi.\n\nfunction Search(props) {\n  function handleChange(event) {\n    const value = event.target.value.toLowerCase();\n\n    if (value !== \"\") {\n      const filteredPokemons = pokemons\n        .filter(filterPokemonsByName(value))\n        // see how this could also have been written in one line at the end of sheet\n        .map(pokemon => pokemon.name)\n        // use map to return all elements and then only the pokemon names\n        .sort((firstName, secondName) => {\n          const lowerCaseFirstName = firstName.toLowerCase();\n          const lowerCaseSecondName = secondName.toLowerCase();\n          if (\n            lowerCaseFirstName.startsWith(value) &&\n            lowerCaseSecondName.startsWith(value)\n          ) {\n            return lowerCaseFirstName.localeCompare(lowerCaseSecondName);\n          }\n          // only first starts with value\n          if (lowerCaseFirstName.startsWith(value)) {\n            return -1;\n          }\n          // only second starts with value\n          if (lowerCaseSecondName.startsWith(value)) {\n            return 1;\n          }\n          // both don't start with value -> sort by name\n          return lowerCaseFirstName.localeCompare(lowerCaseSecondName);\n        });\n\n      props.onPokemonsChange(filteredPokemons);\n    } else {\n      props.onPokemonsChange([]);\n    }\n  }\n\n  return (\n    <>\n      <h2>Find your Pokemon!</h2>\n      <label>\n        Search:\n        <input onChange={handleChange} placeholder=\"Type in Pokemon\" />\n      </label>\n    </>\n  );\n}\n\nSearch.propTypes = {\n  onPokemonsChange: PropTypes.func.isRequired\n};\n\nexport default Search;\n\n/*   const filteredPokemons = pokemons\n//.filter(pokemon =>\n  pokemon.name.toLowerCase().startsWith(value.toLowerCase())\n)\n.map(pokemon => pokemon.name);\nprops.onPokemonsChange(filteredPokemons);\n} */\n","import React from \"react\";\n\nfunction Footer(props) {\n  return <footer>Copyright by {props.name}</footer>;\n}\n\nexport default Footer;\n","import React from \"react\";\n\n/*function Deck() {\n  const pokeDeck = [\"pikachu\", \"XX\", \"Bulbasaur\", \"Maria\", \"Annika\"];\n  const pokeDeckElements = pokeDeck.map(function(element) {\n    return <button className=\"deckbtn\">{element}</button>;\n  });\n  return pokeDeckElements;\n}*/\n\nfunction Deck({ deckItems }) {\n  return (\n    <div>\n      {deckItems.map((deckItem, index) => (\n        <span key={deckItem + index} className=\"DeckItem\">\n          {deckItem}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nexport default Deck;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction PokemonInfo(props) {\n  const [imageSrc, setImageSrc] = React.useState(\"\"); //this is a state\n  const [desc, setDesc] = React.useState(\"loading...\"); //you can write in a comment to the user in the useState\n  const [weight, setWeight] = React.useState(\"\");\n  //desc is description, src is source\n\n  async function fetchPokemon() {\n    let response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${props.pokemon.toLowerCase()}`\n    );\n    const pokemon = await response.json();\n    setImageSrc(pokemon.sprites.front_default);\n\n    setTimeout(() => {\n      setImageSrc(pokemon.sprites.back_default);\n    }, 3000);\n    //could also use setInterval to keep it rotating between front and back */\n\n    response = await fetch(pokemon.species.url);\n\n    const species = await response.json();\n    const flavorTextEntry = species.flavor_text_entries.find(\n      element => element.language.name === \"en\"\n    );\n    setDesc(flavorTextEntry.flavor_text);\n\n    setWeight(pokemon.weight);\n  }\n\n  React.useEffect(() => {\n    fetchPokemon();\n  }, [props.pokemon]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"resultName\">{props.pokemon}</div>\n      <img src={imageSrc} alt={props.pokemon} />\n      <div className=\"resultDescription\">{desc}</div>\n      <div>weight: {weight}</div>\n    </div>\n  );\n}\n\nPokemonInfo.propType = {\n  pokemon: PropTypes.string.isRequired\n};\n// to make sure the property is used the way they are defined. A help for developers: https://reactjs.org/docs/typechecking-with-proptypes.html\n\nexport default PokemonInfo;\n\n/*React.useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${props.pokemon.toLowerCase()}`)\n      .then(response => {\n        return response.json();\n      })\n      .then(pokemon => {\n        setImageSrc(pokemon.sprites.front_default);\n        //the sprites and front_default are names in the pokemon api\n        return pokemon.species.url;\n      })\n      .then(pokemonSpeciesUrl => {\n        return fetch(pokemonSpeciesUrl);\n      })\n      .then(response => {\n        return response.json();\n      })\n      .then(species => {\n        setDesc(\n          species.flavor_text_entries.find(function(element) {\n            return element.language.name === \"en\";\n          }).flavor_text\n        );\n      });\n  }, [props.pokemon]);\n  */\n","import React from \"react\";\nimport PokemonInfo from \"./PokemonInfo\";\nimport PropTypes from \"prop-types\";\n\n//temporary\n//const pokemons = [\"Pikachu\", \"Marshadow\", \"Drampa\"];\n\nfunction Results(props) {\n  const [showPokemon, setShowPokemon] = React.useState(null);\n\n  if (showPokemon) {\n    return (\n      <div>\n        <PokemonInfo pokemon={showPokemon} />\n        <button onClick={handleAddClick}>add to deck</button>\n        <br /> <button onClick={handleBackClick}>Back</button>\n      </div>\n    );\n  }\n\n  function handleAddClick() {\n    props.onAddToDeckClick(showPokemon);\n  }\n  //onAddToDeckClick is the connection to the index.js\n\n  function handleBackClick() {\n    return setShowPokemon(null);\n  }\n\n  function handleClick(pokemon) {\n    return function() {\n      setShowPokemon(pokemon);\n    };\n  }\n\n  return (\n    <div>\n      {props.pokemons.map(pokemon => (\n        <button onClick={handleClick(pokemon)} key={pokemon}>\n          {pokemon}\n        </button>\n      ))}\n      <div className=\"resultButton\">\n        {props.pokemons.length === 0 && <div> Sorry, no Pokemons found </div>}\n      </div>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  pokemons: PropTypes.array.isRequired\n};\n//Proptypes is a help for developers, to make sure the property is there. Results is the function,\n\nexport default Results;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Title from \"./components/Title\";\nimport Search from \"./components/Search\";\nimport Footer from \"./components/Footer\";\nimport Deck from \"./components/Deck\";\nimport { getDeckFromStorage, setDeckToStorage } from \"./utils/storage\";\n\nimport \"./styles.css\";\nimport Results from \"./components/Results\";\n\nfunction App() {\n  const [pokemons, setPokemons] = React.useState([]);\n  const [deck, setDeck] = React.useState(getDeckFromStorage());\n  //getDeckFromStorage is coming from the utils/storage folder\n\n  //build in of localstorage on deck buttons when browser is loaded.\n  React.useEffect(() => {\n    setDeckToStorage(deck);\n  }, [deck]);\n\n  function handlePokemonsChange(newPokemons) {\n    setPokemons(newPokemons);\n    //console.log(\"handlePokemonsChange\", newPokemons);\n  }\n\n  function handleAddToDeckClick(pokeName) {\n    const newDeck = [pokeName, ...deck];\n    //the 3 dots are the \"rest parameter\" eg. it takes the rest of the elements\n    const sliceDeck = newDeck.slice(0, 5);\n    // to only show 5 elements, we use slice. Could also have used .length = 5\n    setDeck(sliceDeck);\n  }\n  //this function is called below in results\n\n  return (\n    <div className=\"App\">\n      <Title title=\"PokeMon\" />\n      <Deck deckItems={deck} />\n      <Search onPokemonsChange={handlePokemonsChange} />\n      <Results pokemons={pokemons} onAddToDeckClick={handleAddToDeckClick} />\n      <Footer name=\"Santhosh\" />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","export function getDeckFromStorage() {\n  try {\n    const deckItem = localStorage.getItem(\"pokedex-deck\");\n    const parsed = JSON.parse(deckItem);\n    return parsed || [];\n  } catch (error) {\n    return [];\n  }\n}\n\nexport function setDeckToStorage(deck) {\n  localStorage.setItem(\"pokedex-deck\", JSON.stringify(deck));\n}\n"],"sourceRoot":""}